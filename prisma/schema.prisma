generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model challenge {
  id              Int        @id @default(autoincrement())
  title           String
  description     String
  difficulty      difficulty
  hint            String
  sample_solution String
  created_at      DateTime   @default(now())
  answers         answer[]
}

model answer {
  id           Int       @id @default(autoincrement())
  challenge_id Int
  result_json  Json
  challenge    challenge @relation(fields: [challenge_id], references: [id])
}

enum difficulty {
  easy
  medium
  hard
}

model student {
  id              Int            @id @default(autoincrement())
  first_name      String
  last_name       String
  email           String         @unique
  gender          String
  date_of_birth   DateTime
  enrollment_year Int
  major           String
  gpa             Float
  registrations   registration[]
}

model course {
  id            Int            @id @default(autoincrement())
  course_code   String         @unique
  title         String
  department    String
  credits       Int
  semester      String
  instructor    String
  registrations registration[]
}

model registration {
  id                Int      @id @default(autoincrement())
  student_id        Int
  course_id         Int
  grade             Float? // Nullable: course in progress
  registered_at     DateTime @default(now())
  completion_status String // e.g., 'in_progress', 'completed', 'dropped'
  student           student  @relation(fields: [student_id], references: [id])
  course            course   @relation(fields: [course_id], references: [id])
}
